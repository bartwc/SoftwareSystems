[target.thumbv7m-none-eabi]  # for cross compiler
runner = "cargo run --target x86_64-unknown-linux-gnu -p embedded-assignment-runner --"
# cargo run will run the runner
[target.'cfg(all(target_arch = "arm", target_os = "none"))']
rustflags = [
    # Previously, the linker arguments --nmagic and -Tlink.x were set here.
    # They are now set by build.rs instead. The linker argument can still
    # only be set here, if a custom linker is needed.

    # By default, the LLD linker is used, which is shipped with the Rust
    # toolchain. If you run into problems with LLD, you can switch to the
    # GNU linker by uncommenting this line:
    # "-C", "linker=arm-none-eabi-ld",

    # If you need to link to pre-compiled C libraries provided by a C toolchain
    # use GCC as the linker by uncommenting the three lines below:
    # "-C", "linker=arm-none-eabi-gcc",
    # "-C", "link-arg=-Wl,-Tlink.x",
    # "-C", "link-arg=-nostartfiles",
]

[build]
target = "thumbv7m-none-eabi"

[unstable]
build-std = ["core", "alloc"]